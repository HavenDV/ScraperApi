openapi: 3.0.0
info:
  description: |
    [https://www.scraperapi.com/](https://www.scraperapi.com/).
  version: "1.0.0"
  title: ScraperApi
  contact:
    email: havendv@gmail.com
  license:
    name: MIT
    url: 'https://github.com/HavenDV/ScraperApi/blob/main/LICENSE'
    
servers:
  - url: 'http://api.scraperapi.com/'
  
tags:
  - name: general
    description: General API.
    externalDocs:
      description: Find more info here
      url: https://www.scraperapi.com/documentation
      
paths:
  /:
    get:
      tags:
        - general
      summary: Scrapes the url.
      description: Scrapes the url.
      operationId: get
      security:
        - ApiKeyAuth: []
        
      parameters:
        - $ref: '#/components/parameters/Url'
        - $ref: '#/components/parameters/Render'
        - $ref: '#/components/parameters/KeepHeaders'
        - $ref: '#/components/parameters/SessionNumber'
        - $ref: '#/components/parameters/CountryCode'
        - $ref: '#/components/parameters/Premium'
        - $ref: '#/components/parameters/DeviceType'
        - $ref: '#/components/parameters/ScraperSdk'
        - $ref: '#/components/parameters/AutoParse'
        - $ref: '#/components/parameters/Headers'
        
      responses:
        '200':
          $ref: '#/components/responses/TextResponse'
          
        '401':
          $ref: '#/components/responses/Unauthorized'
          
        '403':
          $ref: '#/components/responses/ExceedRequestsLimit'
          
        '404':
          $ref: '#/components/responses/NotFound'
          
        '429':
          $ref: '#/components/responses/ExceedConcurrentConnectionLimit'
          
        '500':
          $ref: '#/components/responses/NotCompleted'
          
    post:
      tags:
        - general
      summary: Scrapes the url.
      description: Scrapes the url.
      operationId: post
      security:
        - ApiKeyAuth: []
        
      parameters:
        - $ref: '#/components/parameters/Url'
        - $ref: '#/components/parameters/Render'
        - $ref: '#/components/parameters/KeepHeaders'
        - $ref: '#/components/parameters/SessionNumber'
        - $ref: '#/components/parameters/CountryCode'
        - $ref: '#/components/parameters/Premium'
        - $ref: '#/components/parameters/DeviceType'
        - $ref: '#/components/parameters/ScraperSdk'
        - $ref: '#/components/parameters/AutoParse'
        - $ref: '#/components/parameters/Headers'
      
      requestBody:
        $ref: '#/components/requestBodies/FormData'
        
      responses:
        '200':
          $ref: '#/components/responses/TextResponse'
          
        '401':
          $ref: '#/components/responses/Unauthorized'
          
        '403':
          $ref: '#/components/responses/ExceedRequestsLimit'
          
        '404':
          $ref: '#/components/responses/NotFound'
          
        '429':
          $ref: '#/components/responses/ExceedConcurrentConnectionLimit'
          
        '500':
          $ref: '#/components/responses/NotCompleted'
          
    put:
      tags:
        - general
      summary: Scrapes the url.
      description: Scrapes the url.
      operationId: put
      security:
        - ApiKeyAuth: []
        
      parameters:
        - $ref: '#/components/parameters/Url'
        - $ref: '#/components/parameters/Render'
        - $ref: '#/components/parameters/KeepHeaders'
        - $ref: '#/components/parameters/SessionNumber'
        - $ref: '#/components/parameters/CountryCode'
        - $ref: '#/components/parameters/Premium'
        - $ref: '#/components/parameters/DeviceType'
        - $ref: '#/components/parameters/ScraperSdk'
        - $ref: '#/components/parameters/AutoParse'
        - $ref: '#/components/parameters/Headers'
      
      requestBody:
        $ref: '#/components/requestBodies/FormData'
        
      responses:
        '200':
          $ref: '#/components/responses/TextResponse'
          
        '401':
          $ref: '#/components/responses/Unauthorized'
          
        '403':
          $ref: '#/components/responses/ExceedRequestsLimit'
          
        '404':
          $ref: '#/components/responses/NotFound'
          
        '429':
          $ref: '#/components/responses/ExceedConcurrentConnectionLimit'
          
        '500':
          $ref: '#/components/responses/NotCompleted'
          
  /account:
    get:
      tags:
        - general
      summary: If you would like to monitor your account usage and limits programmatically (how many concurrent requests you're using, how many requests you've made, etc.) you may use the /account endpoint, which returns JSON. Note that the requestCount and failedRequestCount numbers only refresh once every 15 seconds, while the concurrentRequests number is availble in realtime.
      description: If you would like to monitor your account usage and limits programmatically (how many concurrent requests you're using, how many requests you've made, etc.) you may use the /account endpoint, which returns JSON. Note that the requestCount and failedRequestCount numbers only refresh once every 15 seconds, while the concurrentRequests number is availble in realtime.
      operationId: getAccountInformation
      security:
        - ApiKeyAuth: []
        
      responses:
        '200':
          $ref: '#/components/responses/AccountInformation'
    
    
externalDocs:
  description: Find out more about scraperapi.com
  url: 'https://www.scraperapi.com/documentation'
  
  
components:
  schemas:
    AccountInformation:
      type: object
      required:
        - concurrentRequests
        - requestCount
        - failedRequestCount
        - requestLimit
        - concurrencyLimit
        
      properties:
        concurrentRequests:
          type: integer
          example: 553
          
        requestCount:
          type: integer
          example: 6655888
          
        failedRequestCount:
          type: integer
          example: 1118
          
        requestLimit:
          type: integer
          example: 10000000
          
        concurrencyLimit:
          type: integer
          example: 1000
          
  parameters:
    Url:
      name: url
      in: query
      description: The url you would like to scrape.
      required: true
      schema:
        type: string
        
    Render:
      name: render
      in: query
      description: If you are crawling a page that requires you to render the javascript on the page, we can fetch these pages using a headless browser. This feature is only available on the Business and Enterprise plans. To render javascript, simply set render=true and we will use a headless Google Chrome instance to fetch the page.
      required: false
      schema:
        type: boolean
        
    KeepHeaders:
      name: keep_headers
      in: query
      description: If you would like to keep the original request headers in order to pass through custom headers (user agents, cookies, etc.), simply set keep_headers=true. Only use this feature in order to get customized results, do not use this feature in order to avoid blocks, we handle that internally.
      required: false
      schema:
        type: boolean
        
    SessionNumber:
      name: session_number
      in: query
      description: To reuse the same proxy for multiple requests, simply use the &session_number= flag (e.g. session_number=123). The value of session can be any integer, simply send a new integer to create a new session (this will allow you to continue using the same proxy for each request with that session number). Sessions expire 15 minutes after the last usage.
      required: false
      schema:
        type: integer
        format: int64
        
    CountryCode:
      name: country_code
      in: query
      description: To ensure your requests come from the United States, please use the country_code= flag (e.g. country_code=us). United States (us) geotargeting is available on the Startup plan and higher. Business plan customers also have access to Canada (ca), United Kingdom (uk), Germany (de), France (fr), Spain (es), Brazil (br), Mexico (mx), India (in), Japan (jp), China (cn), and Australia (au). Other countries are available to Enterprise customers upon request.
      required: false
      schema:
        type: string
        
    Premium:
      name: premium
      in: query
      description: Our standard proxy pools include millions of proxies from over a dozen ISPs, and should be sufficient for the vast majority of scraping jobs. However, for a few particularly difficult to scrape sites, we also maintain a private internal pool of residential and mobile IPs. This pool is only available to users on the Business plan or higher. Requests through our premium residential and mobile pool are charged at 10 times the normal rate (every successful request will count as 10 API calls against your monthly limit), each request that uses both rendering javascript and our premium pool will be charged at 25 times the normal rate (every successful request will count as 25 API calls against your monthly limit). To send a request through our premium proxy pool, please use the premium=true flag.
      required: false
      schema:
        type: boolean
        
    DeviceType:
      name: device_type
      in: query
      description: Undocumented. 
      required: false
      schema:
        type: string
        enum: [mobile]
        
    ScraperSdk:
      name: scraper_sdk
      in: query
      description: Undocumented. 
      required: false
      schema:
        type: string
        
    AutoParse:
      name: autoparse
      in: query
      description: Undocumented. 
      required: false
      schema:
        type: boolean
        
    Headers:
      name: headers
      in: header
      description: Custom headers. It's using only in C# implementation.
      required: false
      schema:
        type: string
      
  requestBodies:
    FormData:
      description: POST/PUT body.
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            additionalProperties: true
              
  responses:
    TextResponse:
      description: Text response.
      content:
        text/plain:
          schema:
            type: string
    
    NotFound:
      description: Wrong url.
    
    Unauthorized:
      description: Unauthorized request, please make sure your API key is valid.
    
    ExceedRequestsLimit:
      description: There is no overage allowed on the free plan, if you exceed 1000 requests per month on the free plan, you will receive a 403 error.
    
    ExceedConcurrentConnectionLimit:
      description: If you exceed your plan concurrent connection limit, the API will respond with a 429 status code, this can be solved by slowing down your request rate.
    
    NotCompleted:
      description: In cases where every request fails in 60 seconds we will return a 500 error, you may retry the request and you will not be charged for the unsuccessful request.
            
    AccountInformation:
      description: Account Information response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountInformation'
            
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: api_key